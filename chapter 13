

1. **What does the `openpyxl.load_workbook()` function return?**  
   It returns a `Workbook` object that represents the Excel workbook.

2. **What does the `wb.sheetnames` workbook attribute contain?**  
   It contains a list of the names of all the sheets in the workbook.

3. **How would you retrieve the `Worksheet` object for a sheet named 'Sheet1'?**  
   ```python
   sheet = wb['Sheet1']
   ```

4. **How would you retrieve the `Worksheet` object for the workbook’s active sheet?**  
   ```python
   active_sheet = wb.active
   ```

5. **How would you retrieve the value in the cell C5?**  
   ```python
   value = sheet['C5'].value
   ```

6. **How would you set the value in the cell C5 to "Hello"?**  
   ```python
   sheet['C5'].value = "Hello"
   ```

7. **How would you retrieve the cell’s row and column as integers?**  
   ```python
   row = cell.row
   column = cell.column
   ```

8. **What do the `sheet.max_column` and `sheet.max_row` sheet attributes hold, and what is the data type of these attributes?**  
   - `sheet.max_column`: Holds the highest column index with data (an integer).  
   - `sheet.max_row`: Holds the highest row index with data (an integer).

9. **If you needed to get the integer index for column 'M', what function would you need to call?**  
   Use the `openpyxl.utils.column_index_from_string()` function:  
   ```python
   from openpyxl.utils import column_index_from_string
   index = column_index_from_string('M')
   ```

10. **If you needed to get the string name for column 14, what function would you need to call?**  
    Use the `openpyxl.utils.get_column_letter()` function:  
    ```python
    from openpyxl.utils import get_column_letter
    column_letter = get_column_letter(14)
    ```

11. **How can you retrieve a tuple of all the Cell objects from A1 to F1?**  
    ```python
    cells = sheet['A1':'F1']
    ```

12. **How would you save the workbook to the filename `example.xlsx`?**  
    ```python
    wb.save('example.xlsx')
    ```

13. **How do you set a formula in a cell?**  
    Set the formula as a string, starting with `=`:  
    ```python
    sheet['C5'] = "=SUM(A1:A10)"
    ```

14. **If you want to retrieve the result of a cell’s formula instead of the cell’s formula itself, what must you do first?**  
    You must enable formula evaluation by opening the file in Excel and saving it. OpenPyXL does not evaluate formulas.

15. **How would you set the height of row 5 to 100?**  
    ```python
    sheet.row_dimensions[5].height = 100
    ```

16. **How would you hide column C?**  
    ```python
    sheet.column_dimensions['C'].hidden = True
    ```

17. **What is a freeze pane?**  
    A freeze pane locks rows or columns so that they remain visible while scrolling. For example, freezing the top row keeps it in view as you scroll down.

18. **What five functions and methods do you have to call to create a bar chart?**  
    - Import the `BarChart` class:  
      ```python
      from openpyxl.chart import BarChart, Reference
      ```  
    - Create a `BarChart` object:  
      ```python
      chart = BarChart()
      ```  
    - Create a `Reference` object for the chart data:  
      ```python
      data = Reference(sheet, min_col=2, min_row=1, max_col=3, max_row=10)
      ```  
    - Add data to the chart:  
      ```python
      chart.add_data(data, titles_from_data=True)
      ```  
    - Add the chart to the worksheet:  
      ```python
      sheet.add_chart(chart, "E5")
      ```
