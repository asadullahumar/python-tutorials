
1. **A string value of the PDF filename is not passed to the `PyPDF2.PdfFileReader()` function. What do you pass to the function instead?**  
   Instead of passing a string, you pass a file object (opened in binary mode, `'rb'`).

2. **What modes do the File objects for `PdfFileReader()` and `PdfFileWriter()` need to be opened in?**  
   - `PdfFileReader()`: File objects should be opened in **binary read mode** (`'rb'`).  
   - `PdfFileWriter()`: File objects should be opened in **binary write mode** (`'wb'`).

3. **How do you acquire a Page object for page 5 from a `PdfFileReader` object?**  
   Use the `getPage()` method, with an index of 4 (as the index is zero-based):  
   ```python
   page = pdf_reader.getPage(4)
   ```

4. **What `PdfFileReader` variable stores the number of pages in the PDF document?**  
   The `numPages` attribute holds the total number of pages:  
   ```python
   total_pages = pdf_reader.numPages
   ```

5. **If a `PdfFileReader` object’s PDF is encrypted with the password `swordfish`, what must you do before you can obtain Page objects from it?**  
   You must call the `decrypt()` method with the password:  
   ```python
   pdf_reader.decrypt('swordfish')
   ```

6. **What methods do you use to rotate a page?**  
   - `rotateClockwise(degrees)`  
   - `rotateCounterClockwise(degrees)`  
   Example:  
   ```python
   page.rotateClockwise(90)
   ```

7. **What method returns a `Document` object for a file named `demo.docx`?**  
   Use the `Document()` function from the `python-docx` library:  
   ```python
   from docx import Document
   doc = Document('demo.docx')
   ```

8. **What is the difference between a `Paragraph` object and a `Run` object?**  
   - A `Paragraph` object represents an entire paragraph in the document.  
   - A `Run` object represents a contiguous segment of text within a paragraph that shares the same style (e.g., bold, italic).

9. **How do you obtain a list of `Paragraph` objects for a `Document` object that’s stored in a variable named `doc`?**  
   Use the `doc.paragraphs` attribute:  
   ```python
   paragraphs = doc.paragraphs
   ```

10. **What type of object has `bold`, `underline`, `italic`, `strike`, and `outline` variables?**  
    A `Run` object has these attributes.

11. **What is the difference between setting the `bold` variable to `True`, `False`, or `None`?**  
    - `True`: The text is explicitly bold.  
    - `False`: The text is explicitly not bold.  
    - `None`: The text inherits the bold setting from its style.

12. **How do you create a `Document` object for a new Word document?**  
    Use the `Document()` function without any arguments:  
    ```python
    from docx import Document
    doc = Document()
    ```

13. **How do you add a paragraph with the text `'Hello, there!'` to a `Document` object stored in a variable named `doc`?**  
    Use the `add_paragraph()` method:  
    ```python
    doc.add_paragraph('Hello, there!')
    ```

14. **What integers represent the levels of headings available in Word documents?**  
    The integers `0` through `9` represent the levels of headings, where `0` is the highest (title-level).
